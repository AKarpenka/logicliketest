import { PrismaClient } from '@prisma/client';

const prisma = new PrismaClient();

const projectIdeas = [
  {
    title: "Добавить звуковые эффекты",
    description: "Добавить приятные звуки при правильном ответе и ошибке, чтобы сделать игру более живой и интересной."
  },
  {
    title: "Создать режим соревнований",
    description: "Добавить возможность соревноваться с друзьями - кто быстрее решит больше задач за определенное время."
  },
  {
    title: "Добавить подсказки",
    description: "Если ребенок не может решить задачу, показывать подсказку с объяснением логики решения."
  },
  {
    title: "Создать коллекцию наклеек",
    description: "За каждую решенную задачу ребенок получает красивую наклейку, которую можно собирать в альбом."
  },
  {
    title: "Добавить таймер",
    description: "Показывать время, за которое ребенок решает задачу, чтобы он мог улучшать свой результат."
  },
  {
    title: "Создать разные уровни сложности",
    description: "Разделить задачи на простые, средние и сложные, чтобы каждый мог выбрать подходящий уровень."
  },
  {
    title: "Добавить анимацию персонажей",
    description: "Сделать персонажей более живыми - они могут радоваться при правильном ответе и грустить при ошибке."
  },
  {
    title: "Создать ежедневные задания",
    description: "Каждый день давать ребенку 3-5 новых задач, чтобы поддерживать регулярность занятий."
  },
  {
    title: "Добавить статистику прогресса",
    description: "Показывать родителям, сколько задач решил ребенок, какие темы даются лучше, а какие хуже."
  },
  {
    title: "Создать режим тренировки",
    description: "Позволить ребенку повторять уже решенные задачи для закрепления материала."
  },
  {
    title: "Добавить выбор темы оформления",
    description: "Ребенок может выбрать любимую тему - космос, принцессы, машинки, животные и т.д."
  },
  {
    title: "Создать систему достижений",
    description: "Давать ребенку медали и грамоты за особые успехи - например, за решение 10 задач подряд без ошибок."
  },
  {
    title: "Добавить возможность пропустить задачу",
    description: "Если задача слишком сложная, ребенок может пропустить её и вернуться к ней позже."
  },
  {
    title: "Создать режим для родителей",
    description: "Родители могут сами добавлять задачи для своего ребенка или выбирать темы для изучения."
  },
  {
    title: "Добавить праздничные задания",
    description: "В праздники (Новый год, День рождения) давать особые тематические задачи с подарками."
  },
  {
    title: "Создать режим без звука",
    description: "Возможность отключить все звуки для занятий в тихих местах или когда ребенок не хочет звуки."
  },
  {
    title: "Добавить большие кнопки",
    description: "Сделать интерфейс более удобным для маленьких детей - большие кнопки и простые жесты."
  },
  {
    title: "Создать режим для двоих",
    description: "Два ребенка могут играть вместе на одном устройстве, по очереди решая задачи."
  },
  {
    title: "Добавить возможность рисовать",
    description: "В некоторых задачах ребенок может рисовать ответ пальцем или стилусом прямо на экране."
  },
  {
    title: "Создать режим повторения",
    description: "Если ребенок ошибся, задача автоматически повторится через несколько других задач для закрепления."
  }
];

async function main() {
  console.log('Начинаем заполнение базы данных...');

  // Очищаем существующие данные
  await prisma.projectIdea.deleteMany();
  await prisma.user.deleteMany();

  console.log('Создаем идеи проекта...');

  // Создаем идеи проекта
  for (const idea of projectIdeas) {
    await prisma.projectIdea.create({
      data: idea
    });
  }

  console.log(`Успешно создано ${projectIdeas.length} идей проекта!`);
  console.log('База данных заполнена начальными данными.');
}

main()
  .catch((e) => {
    console.error('Ошибка при заполнении базы данных:', e)
    process.exit(1)
  })
  .finally(async () => {
    await prisma.$disconnect()
  });
